

import React, { useState } from 'react';
import {
  StyleSheet,
  SafeAreaView,
  View,
  ScrollView,
  Text,
  TouchableOpacity,
  Switch,
  Image,
} from 'react-native';
import FeatherIcon from 'react-native-vector-icons/Feather';

export default function Example() {
  const [form, setForm] = useState({
    darkMode: false,
    emailNotifications: true,
    pushNotifications: false,
  });

  return (
    <SafeAreaView
      style={[
        styles.container,
        { backgroundColor: form.darkMode ? '#121212' : '#f6f6f6' }, // Muda a cor de fundo com base no modo escuro
      ]}
    >
      <View style={styles.mainContainer}>
        <View style={styles.header}>
          <Text style={[styles.headerTitle, { color: form.darkMode ? '#fff' : '#1d1d1d' }]}>Settings</Text>

          <Text
            style={[
              styles.headerSubtitle,
              { color: form.darkMode ? '#bbb' : '#929292' },
            ]}
          >
            Lorem ipsum dolor sit amet consectetur.
          </Text>
        </View>

        <ScrollView>
          <View
            style={[
              styles.profile,
              { backgroundColor: form.darkMode ? '#333' : '#fff' },
            ]}
          >
            <Image
              alt=""
              source={{
                uri: 'https://images.unsplash.com/photo-1633332755192-727a05c4013d?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=facearea&facepad=2.5&w=256&h=256&q=80',
              }}
              style={styles.profileAvatar}
            />

            <Text style={[styles.profileName, { color: form.darkMode ? '#fff' : '#090909' }]}>
              John Doe
            </Text>

            <Text
              style={[styles.profileEmail, { color: form.darkMode ? '#ccc' : '#848484' }]}
            >
              john.doe@mail.com
            </Text>

            <TouchableOpacity
              onPress={() => {
                // handle onPress
              }}
            >
              <View
                style={[
                  styles.profileAction,
                  { backgroundColor: form.darkMode ? '#007bff' : '#007bff' },
                ]}
              >
                <Text style={[styles.profileActionText, { color: '#fff' }]}>Edit Profile</Text>

                <FeatherIcon color="#fff" name="edit" size={16} />
              </View>
            </TouchableOpacity>
          </View>

          <View style={styles.section}>
            <Text
              style={[
                styles.sectionTitle,
                { color: form.darkMode ? '#fff' : '#a7a7a7' },
              ]}
            >
              Preferences
            </Text>

            <View
              style={[
                styles.sectionBody,
                { backgroundColor: form.darkMode ? '#444' : '#fff' },
              ]}
            >
              <View style={[styles.rowWrapper, styles.rowFirst]}>
                <TouchableOpacity
                  onPress={() => {
                    // handle onPress
                  }}
                  style={styles.row}
                >
                  <View
                    style={[
                      styles.rowIcon,
                      { backgroundColor: '#fe9400' },
                    ]}
                  >
                    <FeatherIcon color="#fff" name="globe" size={20} />
                  </View>

                  <Text
                    style={[
                      styles.rowLabel,
                      { color: form.darkMode ? '#fff' : '#000' },
                    ]}
                  >
                    Language
                  </Text>

                  <View style={styles.rowSpacer} />

                  <Text
                    style={[
                      styles.rowValue,
                      { color: form.darkMode ? '#ccc' : '#8B8B8B' },
                    ]}
                  >
                    English
                  </Text>

                  <FeatherIcon
                    color="#C6C6C6"
                    name="chevron-right"
                    size={20}
                  />
                </TouchableOpacity>
              </View>

              <View style={styles.rowWrapper}>
                <View style={styles.row}>
                  <View
                    style={[
                      styles.rowIcon,
                      { backgroundColor: '#007AFF' },
                    ]}
                  >
                    <FeatherIcon color="#fff" name="moon" size={20} />
                  </View>

                  <Text
                    style={[
                      styles.rowLabel,
                      { color: form.darkMode ? '#fff' : '#000' },
                    ]}
                  >
                    Dark Mode
                  </Text>

                  <View style={styles.rowSpacer} />

                  <Switch
                    onValueChange={(darkMode) =>
                      setForm({ ...form, darkMode })
                    }
                    value={form.darkMode}
                  />
                </View>
              </View>

              <View style={styles.rowWrapper}>
                <TouchableOpacity
                  onPress={() => {
                    // handle onPress
                  }}
                  style={styles.row}
                >
                  <View
                    style={[
                      styles.rowIcon,
                      { backgroundColor: '#32c759' },
                    ]}
                  >
                    <FeatherIcon color="#fff" name="navigation" size={20} />
                  </View>

                  <Text
                    style={[
                      styles.rowLabel,
                      { color: form.darkMode ? '#fff' : '#000' },
                    ]}
                  >
                    Location
                  </Text>

                  <View style={styles.rowSpacer} />

                  <Text
                    style={[
                      styles.rowValue,
                      { color: form.darkMode ? '#ccc' : '#8B8B8B' },
                    ]}
                  >
                    Los Angeles, CA
                  </Text>

                  <FeatherIcon
                    color="#C6C6C6"
                    name="chevron-right"
                    size={20}
                  />
                </TouchableOpacity>
              </View>
            </View>

            <View style={styles.section}>
              <Text
                style={[
                  styles.sectionTitle,
                  { color: form.darkMode ? '#fff' : '#a7a7a7' },
                ]}
              >
                Notifications
              </Text>

              <View
                style={[
                  styles.sectionBody,
                  { backgroundColor: form.darkMode ? '#444' : '#fff' },
                ]}
              >
                <View style={[styles.rowWrapper, styles.rowFirst]}>
                  <View style={styles.row}>
                    <View
                      style={[
                        styles.rowIcon,
                        { backgroundColor: '#38C959' },
                      ]}
                    >
                      <FeatherIcon color="#fff" name="at-sign" size={20} />
                    </View>

                    <Text
                      style={[
                        styles.rowLabel,
                        { color: form.darkMode ? '#fff' : '#000' },
                      ]}
                    >
                      Email Notifications
                    </Text>

                    <View style={styles.rowSpacer} />

                    <Switch
                      onValueChange={(emailNotifications) =>
                        setForm({ ...form, emailNotifications })
                      }
                      value={form.emailNotifications}
                    />
                  </View>
                </View>

                <View style={styles.rowWrapper}>
                  <View style={styles.row}>
                    <View
                      style={[
                        styles.rowIcon,
                        { backgroundColor: '#38C959' },
                      ]}
                    >
                      <FeatherIcon color="#fff" name="bell" size={20} />
                    </View>

                    <Text
                      style={[
                        styles.rowLabel,
                        { color: form.darkMode ? '#fff' : '#000' },
                      ]}
                    >
                      Push Notifications
                    </Text>

                    <View style={styles.rowSpacer} />

                    <Switch
                      onValueChange={(pushNotifications) =>
                        setForm({ ...form, pushNotifications })
                      }
                      value={form.pushNotifications}
                    />
                  </View>
                </View>

                <View style={styles.rowWrapper}>
                  <TouchableOpacity
                    onPress={() => {
                      // handle onPress
                    }}
                    style={styles.row}
                  >
                    <View
                      style={[
                        styles.rowIcon,
                        { backgroundColor: '#FE3C30' },
                      ]}
                    >
                      <FeatherIcon color="#fff" name="music" size={20} />
                    </View>

                    <Text
                      style={[
                        styles.rowLabel,
                        { color: form.darkMode ? '#fff' : '#000' },
                      ]}
                    >
                      Sound
                    </Text>

                    <View style={styles.rowSpacer} />

                    <Text
                      style={[
                        styles.rowValue,
                        { color: form.darkMode ? '#ccc' : '#8B8B8B' },
                      ]}
                    >
                      Default
                    </Text>

                    <FeatherIcon
                      color="#C6C6C6"
                      name="chevron-right"
                      size={20}
                    />
                  </TouchableOpacity>
                </View>
              </View>
            </View>
          </View>

          <Text
            style={[
              styles.contentFooter,
              { color: form.darkMode ? '#ccc' : '#929292' },
            ]}
          >
            Made with ❤️ in Seattle
          </Text>
        </ScrollView>
      </View>
    </SafeAreaView>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  mainContainer: {
    paddingVertical: 24,
    paddingHorizontal: 0,
    flexGrow: 1,
    flexShrink: 1,
    flexBasis: 0,
  },
  contentFooter: {
    marginTop: 24,
    fontSize: 13,
    fontWeight: '500',
    textAlign: 'center',
  },
  /** Header */
  header: {
    paddingHorizontal: 24,
    marginBottom: 12,
  },
  headerTitle: {
    fontSize: 32,
    fontWeight: '700',
  },
  headerSubtitle: {
    fontSize: 15,
    fontWeight: '500',
    marginTop: 6,
  },
  /** Profile */
  profile: {
    padding: 16,
    flexDirection: 'column',
    alignItems: 'center',
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: '#e3e3e3',
  },
  profileAvatar: {
    width: 60,
    height: 60,
    borderRadius: 9999,
  },
  profileName: {
    marginTop: 12,
    fontSize: 20,
    fontWeight: '600',
  },
  profileEmail: {
    marginTop: 6,
    fontSize: 16,
    fontWeight: '400',
  },
  profileAction: {
    marginTop: 12,
    paddingVertical: 10,
    paddingHorizontal: 16,
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#007bff',
    borderRadius: 12,
  },
  profileActionText: {
    marginRight: 8,
    fontSize: 15,
    fontWeight: '600',
    color: '#fff',
  },
  /** Section */
  section: {
    paddingTop: 12,
  },
  sectionTitle: {
    marginVertical: 8,
    marginHorizontal: 24,
    fontSize: 14,
    fontWeight: '600',
    textTransform: 'uppercase',
    letterSpacing: 1.2,
  },
  sectionBody: {
    paddingLeft: 24,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: '#e3e3e3',
  },
  /** Row */
  row: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'flex-start',
    paddingRight: 16,
    height: 50,
  },
  rowWrapper: {
    borderTopWidth: 1,
    borderColor: '#e3e3e3',
  },
  rowFirst: {
    borderTopWidth: 0,
  },
  rowIcon: {
    width: 30,
    height: 30,
    borderRadius: 4,
    alignItems: 'center',
    justifyContent: 'center',
    marginRight: 12,
  },
  rowLabel: {
    fontSize: 17,
    fontWeight: '500',
  },
  rowSpacer: {
    flexGrow: 1,
    flexShrink: 1,
    flexBasis: 0,
  },
  rowValue: {
    fontSize: 17,
    fontWeight: '500',
    marginRight: 4,
  },
});
